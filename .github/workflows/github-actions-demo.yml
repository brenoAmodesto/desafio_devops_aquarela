name: "Terraform / EKS / Tflint"
on:
  push:
    branches:
      - main
  pull_request:
permissions:
      id-token: write # aws oidc connection
      contents: read # actions/checkout
      pull-requests: write # gh bot to comment PR
env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}
jobs:
  

  tflint-checks:
    runs-on: ubuntu-latest
    steps:
    
# Checkout Repository
    - name : Check out Git Repository
      uses: actions/checkout@v3  
      
# TFLint - Terraform Check
    - uses: actions/cache@v2
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v2
      name: Setup TFLint
      with:
        github_token: ${{ secrets.CI_GITHUB_TOKEN }}
        
    - name: Show version
      run: tflint --version
      
# Install plugins
    - name: Init TFLint
      run: tflint --init
      
# Run tflint command in each directory recursively # use --force if you want to continue with workflow although errors are there
    - name: Run TFLint
      run: tflint -f compact --recursive
  
  
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: github-oidc-terraform-state

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.0

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -destroy -input=false     

      - name: setting 
        run: aws eks --region us-east-1 update-kubeconfig --name my-eks
      
      - name: get nodes
        run: kubectl get nodes

      - name: kubectl deploy
        run: |
          kubectl apply -f complete-demo.yaml 
      
      - name: esperar
        run: sleep 30
      
      - name: kubectl service
        run: |
           kubectl apply -f service.yaml 
      
      - name: kubectl get services
        run: kubectl get services


